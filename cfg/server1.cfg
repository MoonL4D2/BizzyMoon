// [General]
// -----------------------------------------------------------------------
hostname "#{Server_Name}#"                        

rcon_password "#{RCON_Pass}#"
sv_steamgroup "38693222"
sv_search_key "bizzymod"
sv_search_team_key "bizzymod"
sv_downloadurl "steamcommunity.com/groups/bizzymod"
sv_steamgroup_exclusive 1                // If set, only members of Steam group will be able to join the server when it's empty, public people will be able to join the server only if it has players. 
                                         // (Forcing the IP as a non-group member in lobby, or directly connecting always works)
			 
motdfile "mymotd.txt"                    // This ensures that Valve doesn't overwrite the MoTD every Update.      [Edit this file instead of motd.txt, found in the same folder (/left4dead2)]
hostfile "myhost.txt"                    // This ensures that Valve doesn't overwrite the Hostfile every Update.  [Edit this file instead of host.txt, found in the same folder (/left4dead2)]
motd_enabled 1                           // Enables the MOTD being shown to clients when on the server.

// What .cfg files to load on Matchmode load (Plugins, nothing else) - Separate with ;
sm_cvar confogl_match_execcfg_plugins "generalfixes.cfg;confogl_plugins.cfg;sharedplugins.cfg"

// [Other Neat Stuff]
// -----------------------------------------------------------------------
sv_region 255                            // Sets the region of the server to be anywhere in the world.
sv_lan 0                                 // Server is not classified as a LAN server.
sv_allow_lobby_connect_only 0            // If set to 1, players may only join this server from matchmaking lobby, may not connect directly.
sv_unlockedchapters 57                   // 57 total chapters between 14 different campaigns.

//sv_gametypes "Coop,L4D1Coop,Realism,Versus,TeamVersus,L4D1VS,RealismVersus,TeamRealismVersus,Survival,L4D1Survival,VersusSurvival,TeamVersusSurvival,Scavenge,TeamScavenge,Mutation,Community,Custom,GunBrain,Dash,Shootzones,Holdout,TankRun,RocketDude,Other"
//sv_tags "Coop,L4D1Coop,Realism,Versus,TeamVersus,L4D1VS,RealismVersus,TeamRealismVersus,Survival,L4D1Survival,VersusSurvival,TeamVersusSurvival,Scavenge,TeamScavenge,Mutation,Community,Custom,GunBrain,Dash,Shootzones,Holdout,TankRun,RocketDude,Other"

// [File Consistency]     
// -----------------------------------------------------------------------
sv_cheats 0                              // Whether cheats are allowed on the server.
sv_consistency 0                         // Whether the server enforces file consistency for critical files.
sv_pure 0                                // The server will force all client files to come from Steam and additional files matching the Server.
sv_pure_kick_clients 0                   // If set to 1, the server will kick clients with mismatching files.
sv_pure_trace 0                          // Whether or not to report when a client is verifying a CRC for a file.
sv_voiceenable 1                         // Enables voice chat in the server.

// [Logging]
// ----------------------------------------------------------------------- 
log on                                   //Creates a logfile (on | off)
sv_logsdir logs                          //Folder in the game directory where server logs will be stored.
sv_logfile 1                             //default 1; Log server information in the log file.
sv_log_onefile 1                         //default 0; Log server information to only one file.
sv_logecho 0                             //default 0; Echo log information to the console.
sv_logbans 1                             //default 0;Log server bans in the server logs.
sv_logflush 0                            //default 0; Flush the log files to disk on each write (slow).
sv_rcon_log 0
sv_rcon_banpenalty 0
sv_rcon_minfailures 10
sv_rcon_maxfailures 20
sv_rcon_minfailuretime 30
sv_reservation_timeout 60

// [Addon Disabler]
// -----------------------------------------------------------------------   
// This Setting will disable/enable the Serverside Addon Disabler.
// -1 = use addonconfig.cfg
//  0 = Disable addons.
//  1 = Enable Addons
///////////////////////////////////////////////////////////////////////
sm_cvar l4d2_addons_eclipse -1
sm_cvar l4d_stats_track 1
sm_cvar l4d_stats_nogameplaycheck 1
sm_cvar steamworks_immediate_upload 1
sm_cvar steamworks_server_sessionid 0
sm_cvar steamworks_show_uploads 0
sm_cvar steamworks_stats_disable 0
sm_cvar achievement_debug 1
sm_cvar achievement_disable 0
sm_cvar z_award_debug 1
sm_cvar z_holiday_gift_drop_chance 1.0
sm_cvar survival_generate_fake_times 0

// [Wait Commands]
sm_cvar sv_runcmds 1
sm_cvar sv_allow_wait_command 1
sm_cvar sv_max_usercmd_future_ticks 10
sm_cvar sv_quota_stringcmdspersecond 2147483647

// [Networking, Rates]
// - Rates forced to 100 on Clients, for 100 Tick.
// - When using a different Tickrate, modify settings accordingly:
// 1. Change 120000 to (Tickrate * 1200) for Rate and Splitpacket.
// 2. Change 100 to (Tickrate) for Cmd and Update Rates.
// -----------------------------------------------------------------------
wait 200;sm_cvar sv_alternateticks 0                              // Server updates on every tick.
wait 200;sm_cvar sv_maxclientframes 1000                          // Maximum number of client frames.
wait 200;sm_cvar sv_minrate 72000                                 // Minimum value of rate.
wait 200;sm_cvar sv_maxrate 144000                                // Maximum value of rate.
wait 200;sm_cvar sv_minupdaterate 60                              // Minimum value of cl_updaterate.
wait 200;sm_cvar sv_maxupdaterate 100                             // Maximum value of cl_updaterate.
wait 200;sm_cvar sv_mincmdrate 60                                 // Minimum value of cl_cmdrate.
wait 200;sm_cvar sv_maxcmdrate 100                                // Maximum value of cl_cmdrate.
wait 200;sm_cvar sv_client_cmdrate_difference 0                   // Sets the value of cl_cmdrate this amount below cl_updaterate.
wait 200;sm_cvar sv_client_min_interp_ratio 0                     // Minimum value of cl_interp_ratio.
wait 200;sm_cvar sv_client_max_interp_ratio 10                    // Maximum value of cl_interp_ratio.
wait 200;sm_cvar sv_instancebaselines 1                           // Enables instance baselines.
wait 200;sm_cvar sv_maxroutable 1200                              // Maximum allowed packet size before packets are split.
wait 200;sm_cvar net_maxroutable 1200                             // Maximum allowed packet size before packets are split.
wait 200;sm_cvar net_minroutable 1200                             // Maximum allowed packet size before packets are split.
wait 200;sm_cvar net_maxfragments 1200                            // Maximum number of fragments for a split packet.
wait 200;sm_cvar net_splitrate 1                                  // Maximum number of fragments that can be sent per frame.
wait 200;sm_cvar net_splitpacket_maxrate 72000                    // Maximum rate that can be used for split packets.
wait 200;sm_cvar net_commpresspackets 1                           // Compresses packets that exceed the max packet size.
wait 200;sm_cvar net_compresspackets_minsize 1200                 // Compresses packets that exceed the max packet size.
wait 200;sm_cvar z_network_compression 1                          // Enables BZ2 network compression.
wait 200;sm_cvar net_maxcleartime 0.1                             // The max amount of time to wait before the next packets are sent.
wait 200;sm_cvar net_allow_multicast 1                            // Enables multicasting.
wait 200;sm_cvar fps_max 144                                      // Forces the maximum amount of FPS the CPU has available for the Server.
wait 200;sm_cvar fps_max_splitscreen 144                          // Forces the maximum amount of FPS the CPU has available for the Server.
wait 200;sm_cvar mat_queue_mode 2                                 // Forces the Server to use queued multithread mode for the material system.
wait 200;sm_cvar mat_queue_report 0                               // Whether or not to report thread stalls.
wait 200;sm_cvar mat_vsync 0                                      // Disables vertical sync. 
wait 200;sm_cvar mat_triplebuffered 0                             // Disables vertical sync.
wait 200;sm_cvar mat_maxframelatency 0                            // Prevents frame rate latency.
wait 200;sm_cvar mat_antialias 8                                  // Sets the highest level of anti aliasing.
wait 200;sm_cvar mat_aaquality 0                                  // Sets the highest level of font quality.
wait 200;sm_cvar mat_forceaniso 16                                // Sets the highest level of texture filtering.
wait 200;sm_cvar mat_picmip -10                                   // Sets the highest level of texture quality.
wait 200;sm_cvar mat_hdr_level 2                                  // Sets the highest level of high definition rendering.
wait 200;sm_cvar mat_monitorgamma 1.6                             // Sets the highest level of brightness.
wait 200;sm_cvar mat_monitorgamma_tv_enabled 0                    // Enables TV monitor gamma mode. 
wait 200;sm_cvar mat_monitorgamma_tv_exp 2.2                      // Brightness exponent TV monitor gamma.
wait 200;sm_cvar mat_monitorgamma_tv_range_min 0                  // Lowest range for TV monitor gamma.
wait 200;sm_cvar mat_monitorgamma_tv_range_max 256                // Highest range for TV monitor gamma. 
wait 200;sm_cvar r_lod 0                                          // Sets the highest LOD.
wait 200;sm_cvar r_rootlod 0                                      // Sets the highest root LOD.
wait 200;sm_cvar r_shadowlod 0                                    // Sets the highest shadow LOD.
wait 200;sm_cvar r_staticprop_lod 0                               // Sets the highest prop LOD.
wait 200;sm_cvar pipeline_static_props 1                          // Pipelines static prop spawning.
wait 200;sm_cvar studio_queue_mode 1                              // Queues static prop loading.
wait 200;sm_cvar cpu_level 2                                      // Sets the highest level of effect detail.
wait 200;sm_cvar gpu_level 3                                      // Sets the highest level of shader detail.
wait 200;sm_cvar gpu_mem_level 2                                  // Sets the highest level of model detail.
wait 200;sm_cvar mem_level 2                                      // Sets the highest level of memory.
wait 200;sm_cvar mem_min_heapsize 64                              // Minimum amount of memory in MB that is available for the server.
wait 200;sm_cvar mem_max_heapsize 512                             // Maximum amount of memory in MB that is available for the server.
wait 200;sm_cvar mem_max_heapsize_dedicated 512                   // Maximum amount of memory in MB that is available for the server.
wait 200;sm_cvar host_flush_threshold 0                           // Don't flush memory caches between server instances.
wait 200;sm_cvar sv_stats 0                                       // Don't need these.
wait 200;sm_cvar sys_minidumpexpandedspew 0                       // Don't need these.
wait 200;sm_cvar sys_minidumpspewlines 0                          // Don't need these.
wait 200;sm_cvar snd_gain_min 1.0                                 // Minimum sound gain.
wait 200;sm_cvar snd_gain_max 1.0                                 // Minimum sound gain.
wait 200;sm_cvar snd_gain 1.0                                     // Sound gain level.
wait 200;sm_cvar suitvolume 1.0                                   // Volume level of the Half-Life 2 HEV Suit.
wait 200;sm_cvar steam_controller_haptics 1                       // Enables haptics on the Steam Controller.
wait 200;sm_cvar xbox_autothrottle 1                              // Enables Xbox auto throttle.
wait 200;sm_cvar xbox_throttlebias 100                            // Xbox throttle bias.
wait 200;sm_cvar xbox_throttlespoof 200                           // Xbox throttle spoof.
wait 200;sm_cvar xbox_steering_deadzone 0.0                       // Xbox steering dead zone.
wait 200;sm_cvar engine_no_focus_sleep 0                          // Keeps the server running even without focus.

// Tickrate Fixes
wait 400;sm_cvar sv_client_predict 1                              // This is already set on clients, but force them to predict.
wait 400;sm_cvar cl_interpolate 1                                 // Whether or not entities are interpolated on the clients.
wait 400;sm_cvar nb_update_frequency 0                            // The lower the value, the more often common infected and witches get updated (Pathing, and state), very CPU Intensive. (0.100 is default) (0 = automatic)
wait 400;sm_cvar nb_update_framelimit 10                          // Maximum frames per second that next bots can update at.
wait 400;sm_cvar nb_update_maxslide 10                            // Maximum amount of update correction that can be applied to next bots.
wait 400;sm_cvar nb_allow_avoiding 1                              // Allows next bots to use path avoidance.
wait 400;sm_cvar nb_allow_climbing 1                              // Allows next bots to climb ladders and walls.
wait 400;sm_cvar nb_allow_gap_jumping 1                           // Allows next bots to jump accross gaps.
wait 400;sm_cvar nb_chase_lead_time 0                             // How long a next bot will lead a chase before another takes over.
wait 400;sm_cvar nb_avoid 0                                       // Disables next bot pathing avoidance.
wait 400;sm_cvar nb_avoid_interval 0                              // Disables next bot pathing avoidance.
wait 400;sm_cvar z_avoidteammates 1                               // Disables solid player collision.
wait 400;sm_cvar z_run_exertion_interval 0                        // Sets infected pathing to update at the server's tick rate.
wait 400;sm_cvar z_attack_interval 0                              // Sets infected pathing to update at the server's tick rate.
wait 400;sm_cvar z_prevent_burrowing 1                            // Prevents zombies from burrying.
wait 400;sm_cvar nb_head_aim_steady_max_rate 1000                 // How fast next bots focus on their target's head.
wait 400;sm_cvar nb_head_aim_settle_duration 0.1                  // How long it takes next bots to focus on their target's head.
wait 400;sm_cvar nb_path_draw_inc 1000                            // How far out next bots can begin drawing a path.
wait 400;sm_cvar nb_path_segment_influence_radius 1000            // How close objects need to be to influence next bot pathing.
wait 400;sm_cvar nb_goal_look_ahead_range 1000                    // How far ahead in the map next bots can path towards something.             
wait 400;sm_cvar nb_speed_look_ahead_range 300                    // How fast next bots are able to path towards something ahead in the map.
wait 400;sm_cvar nb_ladder_align_range 100                        // How close next bots need to be towards a ladder for them to be drawn towards it.
wait 400;sm_cvar g_ragdoll_max_fps 60                             // Players with FPS lower than this will have a reduced number of ragdolls
wait 400;sm_cvar g_ragdoll_min_fps 30                             // Players with FPS lower than this will have 1 ragdoll of each type.
wait 400;sm_cvar g_Language "English"                             // Sets the language to English.
wait 400;sm_cvar ragdoll_collide 0                                // Whether or not ragdolls will collide with each other.
wait 400;sm_cvar ragdoll_self_collision 0                         // Whether or not ragdolls will collide with themselves.
wait 400;sm_cvar ragdoll_slowdown 1                               // Whether ragdoll physics becomes slowed.
wait 400;sm_cvar ragdoll_slowdown_time 2                          // Max amount of time that a ragdoll will be slowed down.
wait 400;sm_cvar ragdoll_sleepaftertime 2                         // How long until a ragdoll will stop moving.
wait 400;sm_cvar ragdoll_force_to_sleep_time 3                    // How long until a ragdoll can no longer be moved.
wait 400;sm_cvar collision_shake_amp 0.0                          // Disables ragdoll collision physics.
wait 400;sm_cvar collision_shake_freq 0.0                         // Disables ragdoll collision physics.
wait 400;sm_cvar collision_shake_time 0.0                         // Disables ragdoll collision physics.
wait 400;sm_cvar cl_simdbones 1                                   // Enables SIMD bones.
wait 400;sm_cvar cl_use_simd_bones 1                              // Enables the use of SIMD bones.
wait 400;sm_cvar phys_enable_experimental_optimizations 1         // Enables experimental SIMD optimizations.
wait 400;sm_cvar phys_enable_simd_optimizations 1                 // Enables additional SIMD optimizations.
wait 400;sm_cvar physx_valve_dll 1                                // Enables Valve DLL physics.
wait 400;sm_cvar PhysPMC 1                                        // Enables PMC physics.
wait 400;sm_cvar sv_gravity 750                                   // Sets the world gravity.
wait 400;sm_cvar sv_accelerate 5                                  // Sets the world acceleration.
wait 400;sm_cvar sv_friction 4                                    // Sets the world friction.
wait 400;sm_cvar sv_airaccelerate 15                              // Sets the air acceleration.
wait 400;sm_cvar sv_wateraccelerate 20                            // Sets the water acceleration.
wait 400;sm_cvar sv_waterfriction 0                               // Sets the water friction.
wait 400;sm_cvar sv_waterdist 0                                   // Disables vertical view fixup when eyes are near a water plane.
wait 400;sm_cvar z_forwardspeed 500                               // Limits the max speed moving forward.
wait 400;sm_cvar z_sidespeed 500                                  // Limits the max speed moving sideways.
wait 400;sm_cvar z_backspeed 500                                  // Limits the max speed moving backwards.
wait 400;sm_cvar sv_rollspeed 450                                 // The speed at which strafing will tilt a player's view by sv_rollangle.
wait 400;sm_cvar sv_backspeed 1.0                                 // The speed factor that is applied to players when moving backwards. 
wait 400;sm_cvar sv_maxspeed 1000                                 // Limits how fast non-nocliping players can move themselves.
wait 400;sm_cvar sv_maxvelocity 2000                              // Players are unable to travel faster than this velocity.
wait 400;sm_cvar sv_noclipaccelerate 5                            // Sets noclip acceleration.
wait 400;sm_cvar sv_noclipfriction 4                              // Sets noclip friction.
wait 400;sm_cvar sv_noclipspeed 3                                 // Sets noclip speed.
wait 400;sm_cvar sv_noclipduringpause 1                           // Allows players to noclip even while the server is paused.
wait 400;sm_cvar sv_specnoclip 1                                  // Whether or not spectators can noclip.
wait 400;sm_cvar sv_specaccelerate 5                              // Sets spectate noclip acceleration.
wait 400;sm_cvar sv_specspeed 3                                   // Sets spectate noclip speed.
wait 400;sm_cvar noclip_fixup 1                                   // Fixes vertical movement view while nocliping. 
wait 400;sm_cvar sv_footsteps 1                                   // Enables sound effects for footsteps.
wait 400;sm_cvar sv_footstepinterval 0.166667                     // How often the footstep sound effect is played.                      
wait 400;sm_cvar sv_optimizedmovement 1                           // Optimizes players' walking movements.
wait 400;sm_cvar mp_feetmaxyawrate 90                             // Player model feet yaw rate.
wait 400;sm_cvar mp_feetyawrate 120                               // Player model feet yaw rate.
wait 400;sm_cvar mp_feetyawrate_max 180                           // Player model feet yaw rate.
wait 400;sm_cvar mp_facefronttime 0.333333                        // How long it takes for a player's legs to turn after they turn their body.

wait 600;sm_cvar survivor_speed 220                               // Corrects the actual survivor running speed.
wait 600;sm_cvar z_shove_friend_speed 220                         // Prevents survivors from slowing down when a teammate shoves them.
wait 600;sm_cvar z_friendly_fire_forgiveness 1                    // Survivors don't take damage from unintentional friendly fire.
wait 600;sm_cvar survivor_friendly_fire_factor_expert 0.4         // Friendly fire factor for expert difficulty
wait 600;sm_cvar survivor_burn_factor_expert 0.8                  // Inferno burn factor for survivors in expert difficulty.
wait 600;sm_cvar l4d2_use_count 8                                 // How many guns can be picked up from the source.
wait 600;sm_cvar player_use_radius 100                            // Range at which players can pick up items.
wait 600;sm_cvar player_incap_use_radius 100                      // Range at which players can revive their teammates.
wait 600;sm_cvar z_use_tolerance 0.8                              // The minumum angle at which a player must be facing something in order to use it.
wait 600;sm_cvar z_gun_swing_coop_max_penalty 2147483647          // Enables unlimited shoving in Coop mode.
wait 600;sm_cvar z_gun_swing_coop_min_penalty 2147483647          // Enables unlimited shoving in Coop mode.
wait 600;sm_cvar z_gun_damage 0                                   // Prevents gas cans from combusting when you shove them in Survival mode before the round starts.
wait 600;sm_cvar director_per_map_weapon_upgrade_chance 0.5       // The probability for the director to spawn a weapon upgrade on a map.
wait 600;sm_cvar director_convert_pills 1                         // Allows the director to convert pills into kits or defibs.
wait 600;sm_cvar director_vs_convert_pills 0.0                    // Disables pills from being converted into kits or defibs in versus mode.
wait 600;sm_cvar director_convert_pills_critical_health 0         // The percent chance that pain pills will turn into a first aid kit.
wait 600;sm_cvar director_convert_pills_to_defib_health 0         // The percent chance that pain pills will turn into a defib.
wait 600;sm_cvar z_round_start_attack_prevention 0                // Removes the delay that survivors are not able to use their weapons for.
wait 600;sm_cvar z_tank_autoshotgun_dmg_scale 1.0                 // Removes the damage nerf that gets put onto auto shotguns against tanks.
wait 600;sm_cvar shotgun_reload_cancel_delay 0                    // How long it takes for a shotgun to stop firing and begin reloading.
wait 600;sm_cvar melee_range 75                                   // Sets the melee range to be equal to survivors' shove range.
wait 600;sm_cvar melee_combo_reset_time 1                         // How long after a melee weapon is used to reset the swing combo.
wait 600;sm_cvar chainsaw_startup_fadeout_time 0                  // How long it takes for the chainsaw's startup animation to fade out.
wait 600;sm_cvar upgradepack_max_drop_dist 0                      // The max drop distance of an ammo pack when being deployed.
wait 600;sm_cvar upgradepack_forward_dist 0                       // The forward distance of an ammo pack when being deployed.
wait 600;sm_cvar z_use_belt_item_tolerance 0.0                    // The minimum angle for which you must be facing a teammate in order to heal them.
wait 600;sm_cvar first_aid_kit_max_heal 101                       // Allows first aid kits to be used at 99 hp or less.
wait 600;sm_cvar pain_pills_decay_rate 0.25                       // The rate in health per second that temporary health will decay at.
wait 600;sm_cvar player_throwforce 2250                           // The force with which a player can throw an object.
wait 600;sm_cvar z_minigun_spread 5                               // Spread of the mounted machine guns.
wait 600;sm_cvar z_minigun_overheat_time 100                      // How long the minigun takes to overheat.
wait 600;sm_cvar z_minigun_cooldown_time 0.1                      // How long it takes the minigun to cooldown.
wait 600;sm_cvar z_minigun_fire_think_interval 0.1                // How often the minigun updates.
wait 600;sm_cvar mounted_gun_overheat_time 100                    // How long the mounted gun takes to overheat.
wait 600;sm_cvar mounted_gun_overheat_penalty_time 0.1            // How long the mounted stays overheated for.
wait 600;sm_cvar mounted_gun_cooldown_time 0.1                    // How long it takes the mounted gun to cooldown.
wait 600;sm_cvar mounted_gun_mount_cooldown_time 0.1              // How long it takes the mounted gun's mount to cooldown.
wait 600;sm_cvar z_minigun_stand_distance 30                      // How far to put survivors when they stop using a mounted machine gun.
wait 600;sm_cvar gascan_use_range 75                              // The range at which you can start pouring a gas can 
wait 600;sm_cvar gascan_use_tolerance 0.0                         // The minimum angle for which you must be facing in order to pour a gas can.
wait 600;sm_cvar cola_bottles_use_tolerance 0.0                   // The minimum angle for which you must be facing in order to place the cola bottles.
wait 600;sm_cvar tick_door_speed 1.0                              // Scale factor for how fast doors open and close.
wait 600;sm_cvar z_door_reopen_interval 0.25                      // The amount of time before a closed door can be reopened.
wait 600;sm_cvar z_door_retry_interval 0.5                        // The amount of time a door will try to close on an object.
wait 600;sm_cvar z_breakable_damage 10                            // How much damage the infected deal to breakable objects.
wait 600;sm_cvar z_door_pound_damage 100                          // How much damage the infected do when clawing a door.
wait 600;sm_cvar z_pounce_door_damage 1000                        // How much damage a hunter's pounce does to a door.
wait 600;sm_cvar smoothstairs 1                                   // Smooths a player's view when walking up stairs.
wait 600;sm_cvar ladder_autocenter 0                              // Whether or not players should be auto-centered when climbing on ladders.
wait 600;sm_cvar ladder_console_controls 0                        // Whether or not to use absolute controls when climbing a ladder.
wait 600;sm_cvar ladder_horizon -0.25                             // The angle at which players can climb up ladders.
wait 600;sm_cvar z_min_ladder_mount_dot 0.25                      // The minimum dot product required of a player to mount a ladder.
wait 600;sm_cvar car_alarm_distance 800                           // How close a survivor must be to an alarm car for it to trigger.
wait 600;sm_cvar car_alarm_chirp_distance 400                     // An alarm car will will play a chirp when survivors are this close to it. 
wait 600;sm_cvar car_alarm_duration 10                            // How long after a car whose alarm is triggered will make noise.
wait 600;sm_cvar elevator_movedelay 0                             // How long before an elevator starts moving once it has been activated.
wait 600;sm_cvar func_break_max_pieces 30                         // Max number of pieces from a broken object.
wait 600;sm_cvar z_do_tracers 1                                   // Enables tracer particle rendering.
wait 600;sm_cvar z_tracer_particles 1                             // Enables tracer particle rendering.
wait 600;sm_cvar z_tracer_spacing 1                               // Minimum distance between tracer particles.
wait 600;sm_cvar sv_tracereffects_limit_general 60                // Limits the max number of tracer particles that can be rendered.

// Slots (This prevents constant resetting of sv_maxplayers on map change)
wait 800;sm_cvar mv_maxplayers 32                                 // Maximum number of players allowed on the server.
wait 800;sm_cvar sv_maxplayers 32                                 // Maximum number of players allowed on the server.
wait 800;sm_cvar sv_visiblemaxplayers 32                          // Maximum number of players that the server reports to the client.
wait 800;sm_cvar sb_all_bot_game 1                                // Prevents the server from shutting down when there are no human players.
wait 800;sm_cvar director_min_start_players 1                     // How many players are required to be in the server before it unfreezes.
wait 800;sm_cvar director_afk_timeout 30                          // How long before a player who is not moving will be switched into idle mode.
wait 800;sm_cvar allow_all_bot_survivor_team 1                    // Prevents the server from shutting down when there are no human players on a single team.
wait 800;sm_cvar director_allow_infected_bots 1                   // Enables infected bot spawning in versus mode.
wait 800;sm_cvar survivor_limit 4                                 // Limits the maximum number of players on the survivor team.
wait 800;sm_cvar z_max_player_zombies 4                           // Limits the maximum number of players on the infected team.
wait 800;sm_cvar z_minion_aim_tolerance 0.1                       // The minimum vision tolerance required for a special infected to attack a survivor.
wait 800;sm_cvar z_minion_limit 4                                 // Limits the maximum number of infected bots allowed to spawn on the infected team.
wait 800;sm_cvar sb_skill "survivor"                              // Sets the skill type for survivor bots.
wait 800;sm_cvar survivor_vision_range_obscured 1000              // How far survivor bots can see infected when their vision is obscured.
wait 800;sm_cvar sb_min_attention_notice_time 0                   // Delay before survivor bots look at another survivor.
wait 800;sm_cvar sb_min_orphan_time_to_cover 0                    // Delay before survivor bots attempt to revive or rescue a teammate.
wait 800;sm_cvar sb_normal_saccade_speed 1000                     // How fast survivor bots look at something.
wait 800;sm_cvar z_ghost_delay_max 20                             // Maximum amount of time for a dead player zombie to become a ghost again.
wait 800;sm_cvar z_ghost_delay_minspawn 1                         // Delay before a player becomes a ghost.
wait 800;sm_cvar z_fog_spawn 1                                    // Enables areas in fog to be spawnable.
wait 800;sm_cvar sv_parallel_packentities 2                       // Set for dedicated servers.
wait 800;sm_cvar sv_parallel_sendsnapshot 2                       // Set for dedicated servers.
wait 800;sm_cvar sv_multiplayer_maxtempentities 48                // Limits the max number of temp entities that can be in the server.
wait 800;sm_cvar sv_multiplayer_sounds 48                         // Limits the max number of sounds that can be played in the server.
wait 800;sm_cvar sv_allowupload 1                                 // Allows clients to upload files.
wait 800;sm_cvar sv_allowdownload 1                               // Allows clients to download files.
wait 800;sm_cvar net_maxfilesize 64                               // Maximum allowed file upload size in MB.
wait 800;sm_cvar sv_voiceenable 1                                 // Enables voice chat in the server.
wait 800;sm_cvar sv_allow_votes 1                                 // Allows players to call votes on the server.
wait 800;sm_cvar sv_vote_issue_change_mission_allowed 1           // Allows players to call a vote to change the map.
wait 800;sm_cvar sv_vote_issue_change_map_now_allowed 1           // Allows players to call a vote to change the map now.
wait 800;sm_cvar sv_vote_issue_change_map_later_allowed 1         // Allows players to call a vote to change the map later.
wait 800;sm_cvar sv_vote_issue_restart_game_allowed 1             // Allows players to call a vote to restart the game or chapter.
wait 800;sm_cvar sv_vote_issue_change_difficulty_allowed 1        // Allows players to call a vote to change the difficulty.
wait 800;sm_cvar sv_vote_issue_kick_allowed 1                     // Allows players to call a vote to kick another player.
wait 800;sm_cvar sv_vote_creation_timer 0                         // How often players are allowed to call a vote.              
wait 800;sm_cvar sv_vote_failure_timer 0                          // Cooldown period for a vote that fails to pass.
wait 800;sm_cvar sv_vote_timer_duration 12                        // How long players will have to vote on an issue.
wait 800;sm_cvar sv_vote_command_delay 1.5                        // How long after a vote passes that the action will occur.
wait 800;sm_cvar sv_vote_kick_ban_duration 0                      // Duration in minutes that a player will be banned for after being kicked.
wait 800;sm_cvar sv_vote_plr_map_limit 2147483647                 // Allows players to call an infinite number of votes per map.
wait 800;sm_cvar changelevel_pause_interval 7.5                   // How long after a chapter ends before loading into the next one.
wait 800;sm_cvar decalfrequency 1.5                               // How often players can spray an image.
wait 800;sm_cvar tauntfrequency 0                                 // How often players can use a taunt voice line.
wait 800;sm_cvar intensity_factor 1.0                             // The rate at which certain events will increase a survivor's intensity meter.
wait 800;sm_cvar survivor_fog_vocalize_percent 0.5                // The percent of the fog's end distance that a survivor will vocalize their teammates.
wait 800;sm_cvar z_expressions 1                                  // Enables infected facial expressions.
wait 800;sm_cvar sv_pvsskipanimation 1                            // Skips bone setup outside of players' visibility.
wait 800;sm_cvar ai_expression_optimization 1                     // Skips infected facial expressions when outside of players' visibility.
wait 800;sm_cvar ai_expression_frametime 0.033333                 // Maximum frametime for background infected to use facial expressions.
wait 800;sm_cvar npc_height_adjust 10                             // Difference in height between the player's eye level and their model's hitbox.
wait 800;sm_cvar skill 3                                          // Sets the game's skill level.
wait 800;sm_cvar sk_autoaim_mode 1                                // Enables skill auto aim mode.

// Some tweaking
wait 1000;sm_cvar Coop 1                                           // Enables Coop mode to be playable on the server.
wait 1000;sm_cvar Deathmatch 1                                     // Enables Deathmatch mode to be playable on the server.
wait 1000;sm_cvar sv_forcepreload 1                                // Pre-loading is always a good thing, force pre-loading on all clients.
wait 1000;sm_cvar precache_all_survivors 1                         // Forces pre-loading on all the survivors.
wait 1000;sm_cvar z_infected_flashlight 1                          // Enables the infected team flashlight.
wait 1000;sm_cvar z_infected_decals 1                              // Allows the infected team to use sprays.
wait 1000;sm_cvar mp_allowspectators 1                             // Allows spectators to be in the server.
wait 1000;sm_cvar spec_filter "any"                                // Spectators can spectate anyone on both teams.
wait 1000;sm_cvar spec_filter_survivors "any"                      // Spectators on the survivor team can spectate anyone on both teams.
wait 1000;sm_cvar spec_filter_infected "any"                       // Spectators on the infected team can spectate anyone on both teams.
wait 1000;sm_cvar director_spectate_specials 1                     // Allows spectators to spectate special infected bots.
wait 1000;sm_cvar z_spec_nightvision 1                             // Enables nightvision on spectators.
wait 1000;sm_cvar mp_teamoverride 1                                // Allows the team rosters to be overridden. 
wait 1000;sm_cvar mp_autoteambalance 0                             // Prevents some shuffling.
wait 1000;sm_cvar mp_teams_unbalance_limit 0                       // Disables check for team balancing.
wait 1000;sm_cvar mp_limitteams 0                                  // Disables check for team balancing.
wait 1000;sm_cvar mp_autokick 0                                    // Prevents players from being kicked by the game.
wait 1000;sm_cvar vs_max_team_switches 2147483647                  // Allows players to switch teams an unlimited number of times.
wait 1000;sm_cvar vs_score_pp_health 1.0                           // Point scale for permanent health. 
wait 1000;sm_cvar vs_score_pp_healthbuffer 1.0                     // Point scale for temp health.
wait 1000;sm_cvar vs_survivor_damage_reduction 1.0                 // Damage factor for infected on survivors in versus mode.
wait 1000;sm_cvar vs_survival_bonus 25                             // Point bonus for every survivor who survives in the saferoom.
wait 1000;sm_cvar vs_defib_penalty 25                              // Point penalty for bringing a dead survivor back to life.
wait 1000;sm_cvar vs_incap_bonus 25                                // Infected point bonus for incapping a survivor.
wait 1000;sm_cvar vs_tiebreak_bonus 25                             // Point bonus for winning the tie breaker at the end of a versus chapter.
wait 1000;sm_cvar versus_winning_team_goes_last 1                  // The winning team at the end of a chapter will play survivors first in the next chapter.
wait 1000;sm_cvar versus_tank_chance 1.0                           // Forces tanks to spawn in versus mode.
wait 1000;sm_cvar versus_tank_chance_intro 1.0                     // Forces tanks to spawn in intro maps in versus mode.
wait 1000;sm_cvar versus_tank_chance_finale 1.0                    // Forces tanks to spawn in finale maps in versus mode.
wait 1000;sm_cvar versus_tank_flow_team_variation 0.0              // Forces tanks to spawn in the same place for both teams.
wait 1000;sm_cvar versus_witch_chance 1.0                          // Forces witches to spawn in versus mode.
wait 1000;sm_cvar versus_witch_chance_intro 1.0                    // Forces witches to spawn in intro maps in versus mode.
wait 1000;sm_cvar versus_witch_chance_finale 1.0                   // Forces witches to spawn in finale maps in versus mode.
wait 1000;sm_cvar versus_witch_flow_team_variation 0.0             // Forces witches to spawn in the same place for both teams.
wait 1000;sm_cvar z_chance 100                                     // Infected spawn chance.
wait 1000;sm_cvar z_finale_chance 100                              // Infected finale spawn chance.
wait 1000;sm_cvar z_brawl_chance 10                                // Common Infected won't randomly fight eachother.
wait 1000;sm_cvar z_common_limit 40                                // Limits the maximum number of common infected allowed on the map.
wait 1000;sm_cvar z_background_limit 40                            // Limits the maximum number of common infected allowed in the background of the map.
wait 1000;sm_cvar director_always_allow_wanderers 1                // Always allow wandering common infected.
wait 1000;sm_cvar cleared_wanderer_respawn_chance 100              // Always respawns common infected in cleared nav areas.
wait 1000;sm_cvar scavenge_wanderer_respawn_chance 100             // Always respawns common infected in cleared nav areas in Scavenge mode.
wait 1000;sm_cvar z_mega_mob_size 60                               // The number of common infected to spawn when a panic event is triggered.
wait 1000;sm_cvar z_spawn_mobs_behind_chance 50                    // The percent chance that a mob will spawn behind the survivor team.
wait 1000;sm_cvar sv_infected_police_tonfa_probability 0.25        // The probability that a riot zombie will drop a police baton.
wait 1000;sm_cvar sv_infected_riot_control_tonfa_probability 0.25  // The probability that a police zombie will drop a police baton.
wait 1000;sm_cvar sv_infected_ceda_vomitjar_probability 0.125      // The probability that a CEDA zombie will drop a bile jar.
wait 1000;sm_cvar sv_fallen_survivor_health_multiplier 10.0        // Health multiplier of the fallen survivor zombie.
wait 1000;sm_cvar z_fallen_kill_suppress_time 60                   // Cooldown period after a fallen survivor zombie dies before which another one can be spawned.
wait 1000;sm_cvar z_fallen_max_count 1                             // Limits the maximum number of fallen survivor zombies allowed in the map.
wait 1000;sm_cvar z_attack_on_the_run_range 30                     // How close a common infected has to be to a survivor to attempt clawing them. 
wait 1000;sm_cvar z_attack_max_range 30                            // Max range of a common infected claw attack.
wait 1000;sm_cvar z_non_head_damage_factor_hard 1.0                // Removes the damage nerf to common infected in advanced difficulty.
wait 1000;sm_cvar z_non_head_damage_factor_expert 1.0              // Removes the damage nerf to common infected in expert difficulty.
wait 1000;sm_cvar z_female_boomer_spawn_chance 50                  // The percent chance that a male boomer will spawn.
wait 1000;sm_cvar z_exploding_splat 0                              // Disables boomers from exploding after taking too much fall damage.
wait 1000;sm_cvar inferno_acid_spawn_angle 45                      // Causes spitter acid to spawn in a circular puddle when it detonates.
wait 1000;sm_cvar inferno_forward_reduction_factor 1.0             // The rate at which inferno flames spread from the source point.
wait 1000;sm_cvar tongue_break_from_damage_amount 300              // How much damage a smoker must take for his tongue to break.
wait 1000;sm_cvar z_pounce_damage_interrupt 300                    // How much damage a hunter must take for him to leap away.
wait 1000;sm_cvar z_pounce_damage_delay 0.75                       // Delay before a hunter's pounce starts doing damage.
wait 1000;sm_cvar hunter_pounce_max_loft_angle 90                  // Max loft angle for a hunter lunge.
wait 1000;sm_cvar z_jockey_ride_damage_delay 0.5                   // Delay before a jockey's ride starts doing damage.
wait 1000;sm_cvar jockey_pounce_max_loft_angle 90                  // Max loft angle for a jockey leap.
wait 1000;sm_cvar z_charger_probe_alone 16                         // Object impact radius of a charger without a survivor.
wait 1000;sm_cvar z_charger_probe_attack 16                        // Object impact radius of a charger with a survivor.
wait 1000;sm_cvar z_charger_impact_epsilon 0                       // Object impact radius epsilon.
wait 1000;sm_cvar z_charge_impact_angle 0.6                        // Minimum angle for a charger to impact a wall.
wait 1000;sm_cvar z_frustration_los_delay 0.5                      // Line of sight calculations will be delayed by this amount of time.
wait 1000;sm_cvar tank_throw_allow_range 400                       // A tank must be at least this far away from survivors to throw a rock.
wait 1000;sm_cvar tank_rock_overhead_percent 100                   // Makes sure that the tank only uses standard rock throw variations.
wait 1000;sm_cvar tank_throw_aim_error 0                           // Makes the tanks actually aim rocks at players in easy difficulty.
wait 1000;sm_cvar tank_throw_max_loft_angle 90                     // Max loft angle for a tank rock throw.
wait 1000;sm_cvar z_tank_rock_radius 96                            // Hitbox radius for the tank's rock to hit players.
wait 1000;sm_cvar inferno_max_range 250                            // Corrected max range of spread of inferno particles.

wait 1200;sm_cvar sv_max_queries_sec_global 120                    // Maximum queries per second to respond to from anywhere.
wait 1200;sm_cvar sv_max_queries_sec 6                             // Maximum queries per second to respond to from a single IP address.
wait 1200;sm_cvar sv_max_queries_window 60                         // The window for averaging queries per second.
wait 1200;sm_cvar sv_timeout 60                                    // How long before players who are not receiving connections from the host will be disconnected.
wait 1200;sm_cvar sv_pausable 0                                    // Prevents the server from being paused.
wait 1200;sm_cvar sv_pausable_dev 0                                // Prevents the server from being paused.
wait 1200;sm_cvar sv_pausable_dev_ds 0                             // Prevents the server from being paused.
wait 1200;sm_cvar sv_unlag 1                                       // Enables player lag compensation.
wait 1200;sm_cvar sv_unlag_fixstuck 1                              // Prevent getting stuck when attempting to "unlag" a player.
wait 1200;sm_cvar sv_maxunlag 1.0                                  // Maximum amount of seconds to "unlag", go back in time.
wait 1200;sm_cvar sv_lagcompensationforcerestore 1                 // Lag compensation is performed without checking for validity.
wait 1200;sm_cvar sv_player_stuck_tolerance 3.0                    // How long before stuck players will be teleported to their nearest teammate.
wait 1200;sm_cvar survivor_allow_crawling 0                        // Whether survivors should be allowed to crawl while incapped.
wait 1200;sm_cvar survivor_crawl_speed 100                         // How fast survivors are when crawling.
wait 1200;sm_cvar survivor_incapacitated_reload_multiplier 1.0     // Removes the reload penalty for incapacittated survivors.
wait 1200;sm_cvar survivor_ledge_grab_ground_check_time 1          // How long before a survivor who ledges over safe ground will be revived.
wait 1200;sm_cvar survivor_incap_hopeless_decay_rate 3             // The rate at which the survivors' health will decay after all survivors become incapped.
wait 1200;sm_cvar cl_clock_correction 1                            // Enables clock correction on the clients.
wait 1200;sm_cvar cl_clock_correction_force_server_tick 999        // Forces clock correction to run at the server's tick rate.
wait 1200;sm_cvar cl_clock_correction_adjustment_min_offset 10     // The minimum clock offset at which clock corrections will be applied.
wait 1200;sm_cvar cl_clock_correction_adjustment_max_offset 100    // The maximum clock offset at which clock corrections will be applied.
wait 1200;sm_cvar cl_clock_correction_adjustment_max_amount 200    // The minimum number of milliseconds that can be used to correct a client's clock.
wait 1200;sm_cvar cl_clockdrift_max_ms 200                         // The maximum number of milliseconds that a client's clock can drift before it snaps back to the server's.
wait 1200;sm_cvar sv_clockcorrection_msecs 100                     // This one makes laggy players have less of an advantage regarding hitbox (as the server normally compensates for 60msec, lowering it below 15 will make some players appear stuttery)
wait 1200;sm_cvar sv_cycle_latch_timer 0.1                         // How often clock corrections are made on clients.
wait 1200;sm_cvar cl_consistencycheck_interval 2147483647          // How often the server performs a consistency check on the clients.
wait 1200;sm_cvar think_limit 0                                    // Disables script think time check.
wait 1200;sm_cvar sv_thinktimecheck 0                              // Disables script think time check.
wait 1200;sm_cvar tp_schedule_post_think 0                         // Disables script think time check.
