// [General]
// -----------------------------------------------------------------------
hostname "#{Server_Name}#"                        

rcon_password "#{RCON_Pass}#"
sv_steamgroup "38693222"
sv_search_key "bizzymod"
sv_search_team_key "bizzymod"
sv_downloadurl "steamcommunity.com/groups/bizzymod"
sv_contact "EricMizusawa02@gmail.com"
sv_steamgroup_exclusive 1                                         // If set, only members of Steam group will be able to join the server when its empty, public people will be able to join the server only if it has players. 
                                                                  // (Forcing the IP as a non-group member in lobby, or directly connecting always works)
			 
motdfile "mymotd.txt"                                             // This ensures that Valve doesnt overwrite the MoTD every Update.      [Edit this file instead of motd.txt, found in the same folder (/left4dead2)]
hostfile "myhost.txt"                                             // This ensures that Valve doesnt overwrite the Hostfile every Update.  [Edit this file instead of host.txt, found in the same folder (/left4dead2)]
motd_enabled 1                                                    // Enables the MOTD being shown to clients when on the server.

// What .cfg files to load on Matchmode load (Plugins, nothing else) - Separate with ;
sm_cvar confogl_match_execcfg_plugins "generalfixes.cfg;confogl_plugins.cfg;sharedplugins.cfg"

// [Other Neat Stuff]
// -----------------------------------------------------------------------
sv_region 255                                                     // Sets the region of the server to be anywhere in the world.
sv_lan 0                                                          // Server is not classified as a LAN server.
sv_forcepreload 1                                                 // Forces the server to preload all of the games assets.
sv_allow_lobby_connect_only 0                                     // If set to 1, players may only join this server from matchmaking lobby, may not connect directly.
sv_unlockedchapters 62                                            // 57 total chapters between 14 different campaigns and 5 extra bonus maps that are not in the regular campaigns.

sv_gametypes "Coop,L4D1Coop,Realism,Versus,TeamVersus,L4D1VS,RealismVersus,TeamRealismVersus,Survival,L4D1Survival,VersusSurvival,TeamVersusSurvival,Scavenge,TeamScavenge,Mutation,Community,Custom,GunBrain,Dash,Shootzones,Holdout,TankRun,RocketDude,Other"
sv_tags "Secure,Official,Vanilla,Coop,Realism,Versus,Survival,Mutations,Easy,Normal,Advanced,Expert"
// [File Consistency]     
// -----------------------------------------------------------------------
sv_cheats 0                                                       // Whether cheats are allowed on the server.
sv_consistency 0                                                  // Whether the server enforces file consistency for critical files.
sv_pure 0                                                         // The server will force all client files to come from Steam and additional files matching the Server.
sv_pure_kick_clients 0                                            // If set to 1, the server will kick clients with mismatching files.
sv_pure_trace 0                                                   // Whether or not to report when a client is verifying a CRC for a file.
sv_voiceenable 1                                                  // Enables voice chat in the server.

// [Logging]
// ----------------------------------------------------------------------- 
log on                                                            // Creates a logfile (on | off)
sv_logsdir logs                                                   //Folder in the game directory where server logs will be stored.
sv_logfile 1                                                      // Default 1; Log server information in the log file.
sv_log_onefile 1                                                  // Default 0; Log server information to only one file.
sv_logecho 0                                                      // Default 0; Echo log information to the console.
sv_logbans 1                                                      // Default 0;Log server bans in the server logs.
sv_logflush 0                                                     // Default 0; Flush the log files to disk on each write (slow).
sv_rcon_log 0

// [Addon Disabler]
// -----------------------------------------------------------------------   
// This Setting will disable/enable the Serverside Addon Disabler.
// -1 = use addonconfig.cfg
//  0 = Disable addons.
//  1 = Enable Addons
///////////////////////////////////////////////////////////////////////
sm_cvar l4d2_addons_eclipse -1
sm_cvar l4d_stats_track 1
sm_cvar l4d_stats_nogameplaycheck 1
sm_cvar steamworks_immediate_upload 1
sm_cvar steamworks_server_sessionid 0
sm_cvar steamworks_show_uploads 0
sm_cvar steamworks_stats_disable 0
sm_cvar achievement_debug 1
sm_cvar achievement_disable 0
sm_cvar z_award_debug 1
sm_cvar z_holiday_gift_drop_chance 1.0
sm_cvar survival_generate_fake_times 0

// [Wait Commands]
sm_cvar sv_runcmds 1
sm_cvar sv_allow_wait_command 1
sm_cvar sv_max_usercmd_future_ticks 10
sm_cvar sv_quota_stringcmdspersecond 2147483647

// [Networking, Rates]
// - Rates forced to 100 on Clients, for 100 Tick.
// - When using a different Tickrate, modify settings accordingly:
// 1. Change 120000 to (Tickrate * 1200) for Rate and Splitpacket.
// 2. Change 100 to (Tickrate) for Cmd and Update Rates.
// -----------------------------------------------------------------------
wait 500;sm_cvar sv_alternateticks 0                               // Server updates on every tick.
wait 500;sm_cvar sv_maxclientframes 1000                           // Maximum number of client frames.
wait 500;sm_cvar sv_minrate 72000                                  // Minimum value of rate.
wait 500;sm_cvar sv_maxrate 120000                                 // Maximum value of rate.
wait 500;sm_cvar sv_minupdaterate 60                               // Minimum value of cl_updaterate.
wait 500;sm_cvar sv_maxupdaterate 100                              // Maximum value of cl_updaterate.
wait 500;sm_cvar sv_mincmdrate 60                                  // Minimum value of cl_cmdrate.
wait 500;sm_cvar sv_maxcmdrate 100                                 // Maximum value of cl_cmdrate.
wait 500;sm_cvar sv_client_cmdrate_difference 0                    // Sets the value of cl_cmdrate this amount below cl_updaterate.
wait 500;sm_cvar sv_client_min_interp_ratio 0                      // Minimum value of cl_interp_ratio.
wait 500;sm_cvar sv_client_max_interp_ratio 10                     // Maximum value of cl_interp_ratio.
wait 500;sm_cvar sv_instancebaselines 1                            // Enables instance baselines.
wait 500;sm_cvar sv_maxroutable 1200                               // Maximum allowed packet size before packets are split.
wait 500;sm_cvar net_maxroutable 1200                              // Maximum allowed packet size before packets are split.
wait 500;sm_cvar net_minroutable 1200                              // Maximum allowed packet size before packets are split.
wait 500;sm_cvar net_maxfragments 1200                             // Maximum number of fragments for a split packet.
wait 500;sm_cvar net_splitrate 1                                   // Maximum number of fragments that can be sent per frame.
wait 500;sm_cvar net_splitpacket_maxrate 72000                     // Maximum rate that can be used for split packets.
wait 500;sm_cvar net_commpresspackets 1                            // Compresses packets that exceed the max packet size.
wait 500;sm_cvar net_compresspackets_minsize 1200                  // Compresses packets that exceed the max packet size.
wait 500;sm_cvar z_network_compression 1                           // Enables BZ2 network compression.
wait 500;sm_cvar net_maxcleartime 1.0                              // The max amount of time to wait before the next packets are sent.
wait 500;sm_cvar net_allow_multicast 1                             // Enables multicasting.
wait 500;sm_cvar fps_max 144                                       // Forces the maximum amount of FPS the CPU has available for the Server.
wait 500;sm_cvar fps_max_splitscreen 144                           // Forces the maximum amount of FPS the CPU has available for the Server.
wait 500;sm_cvar mat_queue_mode 2                                  // Forces the Server to use queued multithread mode for the material system.
wait 500;sm_cvar mat_queue_report 0                                // Whether or not to report thread stalls.
wait 500;sm_cvar mat_vsync 0                                       // Disables vertical sync. 
wait 500;sm_cvar mat_triplebuffered 0                              // Disables vertical sync.
wait 500;sm_cvar mat_maxframelatency 0                             // Prevents frame rate latency.
wait 500;sm_cvar mat_antialias 8                                   // Sets the highest level of anti aliasing.
wait 500;sm_cvar mat_aaquality 0                                   // Sets the highest level of font quality.
wait 500;sm_cvar mat_forceaniso 16                                 // Sets the highest level of texture filtering.
wait 500;sm_cvar mat_picmip -10                                    // Sets the highest level of texture quality.
wait 500;sm_cvar mat_hdr_level 2                                   // Sets the highest level of high definition rendering.
wait 500;sm_cvar mat_monitorgamma 1.6                              // Sets the highest level of brightness.
wait 500;sm_cvar mat_monitorgamma_tv_enabled 0                     // Enables TV monitor gamma mode. 
wait 500;sm_cvar mat_monitorgamma_tv_exp 2.2                       // Brightness exponent TV monitor gamma.
wait 500;sm_cvar mat_monitorgamma_tv_range_min 0                   // Lowest range for TV monitor gamma.
wait 500;sm_cvar mat_monitorgamma_tv_range_max 256                 // Highest range for TV monitor gamma. 
wait 500;sm_cvar mat_motion_blur_enabled 1                         // Enables screen motion blur.
wait 500;sm_cvar r_lod 0                                           // Sets the highest LOD.
wait 500;sm_cvar r_rootlod 0                                       // Sets the highest root LOD.
wait 500;sm_cvar r_shadowlod 0                                     // Sets the highest shadow LOD.
wait 500;sm_cvar r_staticprop_lod 0                                // Sets the highest prop LOD.
wait 500;sm_cvar pipeline_static_props 1                           // Pipelines static prop spawning.
wait 500;sm_cvar studio_queue_mode 1                               // Queues static prop loading.
wait 500;sm_cvar cpu_level 2                                       // Sets the highest level of effect detail.
wait 500;sm_cvar gpu_level 3                                       // Sets the highest level of shader detail.
wait 500;sm_cvar gpu_mem_level 2                                   // Sets the highest level of model detail.
wait 500;sm_cvar mem_level 2                                       // Sets the highest level of memory.
wait 500;sm_cvar mem_min_heapsize 64                               // Minimum amount of memory in MB that is available for the server.
wait 500;sm_cvar mem_max_heapsize 512                              // Maximum amount of memory in MB that is available for the server.
wait 500;sm_cvar mem_max_heapsize_dedicated 512                    // Maximum amount of memory in MB that is available for the server.
wait 500;sm_cvar host_flush_threshold 0                            // Dont flush memory caches between server instances.
wait 500;sm_cvar sv_stats 0                                        // Dont need these.
wait 500;sm_cvar sys_minidumpexpandedspew 0                        // Dont need these.
wait 500;sm_cvar sys_minidumpspewlines 0                           // Dont need these.
wait 500;sm_cvar snd_gain_min 1.0                                  // Minimum sound gain.
wait 500;sm_cvar snd_gain_max 1.0                                  // Minimum sound gain.
wait 500;sm_cvar snd_gain 1.0                                      // Sound gain level.
wait 500;sm_cvar suitvolume 1.0                                    // Volume level of the Half-Life 2 HEV Suit.
wait 500;sm_cvar z_noise_level_max 150                             // Maximum noise level.
wait 500;sm_cvar z_noise_level_footstep 150                        // Noise level of the footstep sound effect.
wait 500;sm_cvar z_noise_level_vocalize 150                        // Noise level of survivor vocalizations.
wait 500;sm_cvar z_noise_level_fade_rate 50                        // Noise level fade rate.
wait 500;sm_cvar z_noise_level_hold_time 0.333333                  // How long a noise lingers for.
wait 500;sm_cvar steam_controller_haptics 1                        // Enables haptics on the Steam Controller.
wait 500;sm_cvar xbox_autothrottle 1                               // Enables Xbox auto throttle.
wait 500;sm_cvar xbox_throttlebias 100                             // Xbox throttle bias.
wait 500;sm_cvar xbox_throttlespoof 200                            // Xbox throttle spoof.
wait 500;sm_cvar xbox_steering_deadzone 0.0                        // Xbox steering dead zone.
wait 500;sm_cvar force_disablex360 0                               // Whether or not to forcefully disable XBox 360 support.
wait 500;sm_cvar engine_no_focus_sleep 0                           // Keeps the server running even without focus.

// Tickrate Fixes
wait 1000;sm_cvar sv_client_predict 1                              // This is already set on clients, but force them to predict.
wait 1000;sm_cvar cl_interpolate 1                                 // Whether or not entities are interpolated on the clients.
wait 1000;sm_cvar nb_update_frequency 0                            // The lower the value, the more often common infected and witches get updated (Pathing, and state), very CPU Intensive. (0.100 is default) (0 = automatic)
wait 1000;sm_cvar nb_update_framelimit 10                          // Maximum number of next bots that can be updated each frame.
wait 1000;sm_cvar nb_update_maxslide 10                            // Maximum amount of update correction that can be applied to next bots.
wait 1000;sm_cvar nb_allow_avoiding 1                              // Allows next bots to use path avoidance.
wait 1000;sm_cvar nb_allow_climbing 1                              // Allows next bots to climb ladders and walls.
wait 1000;sm_cvar nb_allow_gap_jumping 1                           // Allows next bots to jump accross gaps.
wait 1000;sm_cvar nb_chase_lead_time 0                             // How long a next bot will lead a chase before another takes over.
wait 1000;sm_cvar nb_avoid 0                                       // Disables next bot pathing avoidance.
wait 1000;sm_cvar nb_avoid_interval 0                              // Disables next bot pathing avoidance.
wait 1000;sm_cvar z_push_force 1000                                // How much force common infected push each other with.
wait 1000;sm_cvar z_pushaway_force 100                             // How much force common infected push each other away with.
wait 1000;sm_cvar z_push_mass_max 100                              // Max amount of mass that a common infected can push away.
wait 1000;sm_cvar z_carry_mass_max 100                             // Max amount of mass that a common infected can carry.
wait 1000;sm_cvar z_avoidteammates 1                               // Disables solid player collision.
wait 1000;sm_cvar z_avoidforce 1000                                // How much force is applied by common infected to each other when avoiding each other.
wait 1000;sm_cvar z_avoid_min_range 20                             // The shortest distance that common infected can avoid each other at.
wait 1000;sm_cvar z_max_neighbor_range 100                         // Max range for calculating common infected avoidance.
wait 1000;sm_cvar z_run_exertion_interval 0                        // Sets infected pathing to update at the servers tick rate.
wait 1000;sm_cvar z_attack_interval 0                              // Sets infected pathing to update at the servers tick rate.
wait 1000;sm_cvar z_prevent_burrowing 1                            // Prevents zombies from burrying.
wait 1000;sm_cvar nb_head_aim_steady_max_rate 1000                 // How fast next bots focus on their targets head.
wait 1000;sm_cvar nb_head_aim_settle_duration 0.1                  // How long it takes next bots to focus on their targets head.
wait 1000;sm_cvar nb_path_draw_inc 1000                            // How far out next bots can begin drawing a path.
wait 1000;sm_cvar nb_path_segment_influence_radius 1000            // How close objects need to be to influence next bot pathing.
wait 1000;sm_cvar nb_goal_look_ahead_range 1000                    // How far ahead in the map next bots can path towards something.             
wait 1000;sm_cvar nb_speed_look_ahead_range 300                    // How fast next bots are able to path towards something ahead in the map.
wait 1000;sm_cvar nb_ladder_align_range 128                        // How close next bots need to be towards a ladder for them to be drawn towards it.
wait 1000;sm_cvar sb_skill "survivor"                              // Sets the skill type for survivor bots.
wait 1000;sm_cvar sb_flashlight 0                                  // Whether or not to force the survivor bots flashlights to be on or off.
wait 1000;sm_cvar sb_max_team_melee_weapons 4                      // The number of survivor bots that are allowed to have a melee weapon.
wait 1000;sm_cvar sb_use_upgrades 1                                // Allows survivor bots to use weapon upgrades.
wait 1000;sm_cvar sb_allow_leading 1                               // Allows survivor bots to play through the map by themselves.
wait 1000;sm_cvar sb_escort 0                                      // Whether or not survivor bots need to be escorted going place to place.
wait 1000;sm_cvar sb_enforce_proximity_range 1000                  // The range at which a survivor bot will be teleported back to their team.
wait 1000;sm_cvar sb_enforce_proximity_lookat_timeout 5            // How long a survivor bot must be out of range before being teleported back to their team.
wait 1000;sm_cvar sb_separation_danger_max_range 300               // The distance at which a survivor bot will begin following their teammates.
wait 1000;sm_cvar sb_separation_danger_min_range 100               // The distance that a survivor bot will stop following their teammates.
wait 1000;sm_cvar sb_separation_range 300                          // The desired distance between survivor bots.
wait 1000;sm_cvar sb_neighbor_range 300                            // How close survivors need to be to their teammates in order to feel safe.
wait 1000;sm_cvar sb_follow_stress_factor 1.0                      // The intensity with which survivor bots will follow their teammates.
wait 1000;sm_cvar sb_pushscale 0.0                                 // The force with which survivor bots will push each other with.
wait 1000;sm_cvar sb_battlestation_give_up_range_from_human 1000   // A survivor bot will leave their battlestation when they are this far away from their team.
wait 1000;sm_cvar sb_battlestation_human_hold_time 1               // How long a survivor bot will hold their battlestation before going back to their team.
wait 1000;sm_cvar sb_near_hearing_range 2000                       // How far away a survivor can hear an infected.
wait 1000;sm_cvar sb_far_hearing_range 1000                        // How far away a survivor can hear anything.
wait 1000;sm_cvar survivor_vision_range 1000                       // How far survivor bots can see infected when their vision is obscured.
wait 1000;sm_cvar survivor_vision_range_obscured 1000              // How far survivor bots can see infected when their vision is obscured.
wait 1000;sm_cvar sb_normal_saccade_speed 1000                     // How fast survivor bots look at a teammate.
wait 1000;sm_cvar sb_combat_saccade_speed 1000                     // How fast survivor bots look at an infected.
wait 1000;sm_cvar sb_allow_shoot_through_survivors 0               // Prevents the survivor bots from shooting infected through their teammates.
wait 1000;sm_cvar sb_sidestep_for_horde 1                          // Allows the survivor bots to move positions to shoot the infected.
wait 1000;sm_cvar sb_hindrance_range 100                           // The distance from a survivor bots line of sight that an object will obscure their aim.
wait 1000;sm_cvar sb_min_attention_notice_time 0                   // Delay before survivor bots look at another survivor.
wait 1000;sm_cvar sb_min_orphan_time_to_cover 0                    // Delay before survivor bots attempt to revive or rescue a teammate.
wait 1000;sm_cvar sb_locomotion_wait_threshold 1                   // How long a survivor will wait before moving to their teammates.
wait 1000;sm_cvar sb_debug_apoproach_wait_time 0                   // How long a survivor bot will wait at its move-to spot.
wait 1000;sm_cvar sb_friend_immobilized_reaction_time_normal 0     // Delay before a survivor bot will attempt to save a teammate in normal difficulty.
wait 1000;sm_cvar sb_friend_immobilized_reaction_time_hard 0       // Delay before a survivor bot will attempt to save a teammate in advanced difficulty.
wait 1000;sm_cvar sb_friend_immobilized_reaction_time_expert 0     // Delay before a survivor bot will attempt to save a teammate in expert difficulty.
wait 1000;sm_cvar sb_friend_immobilized_reaction_time_vs 0         // Delay before a survivor bot will attempt to save a teammate in Versus mode.
wait 1000;sm_cvar sb_melee_approach_victim 0                       // A survivor bot wont try to save their teammate with a melee weapon.
wait 1000;sm_cvar sb_revive_friend_distance 200                    // How far away a survivor bot can revive their incapped teammate.
wait 1000;sm_cvar sb_temp_health_consider_factor 0.75              // The factor that survivor bots will apply to temp health when considering who to heal.
wait 1000;sm_cvar sb_toughness_buffer 10                           // How much health a survivor bot must have over a human teammate to heal themselves.
wait 1000;sm_cvar sb_vomit_blind_time 0                            // How long a biled survivor bot will be blind for.
wait 1000;sm_cvar sb_use_button_range 500                          // How close a to a trigger the survivor bots must be before they can attempt to activate it.
wait 1000;sm_cvar sb_minigun_distance 40                           // From how far away a survivor bot can use a mounted machine gun.
wait 1000;sm_cvar sb_narrow_corridor_width 64                      // How narrow a passageway must be for the survivor bots to pass through it one at a time.
wait 1000;sm_cvar sb_close_checkpoint_door_interval 5              // How long before a survivor bot will close the saferoom door once everyone is inside.
wait 1000;sm_cvar sb_rescue_vehicle_loading_range 100              // The distance that a survivor bot will be from the rescue vehicle when waiting for it to arrive.

wait 1000;sm_cvar g_Language "English"                             // Sets the games language to English.
wait 1000;sm_cvar sv_ragdoll_maxcount 65536                        // The maximum number of ragdolls that can exist on the map at once.
wait 1000;sm_cvar sv_ragdoll_maxcount_generic 65536                // The maximum number of common infected ragdolls that can exist on the map at once.
wait 1000;sm_cvar sv_ragdoll_maxcount_special 65536                // The maximum number of special infected ragdolls that can exist on the map at once.
wait 1000;sm_cvar sv_ragdoll_maxcount_boss 65536                   // The maximum number of tank and witch ragdolls that can exist on the map at once.
wait 1000;sm_cvar sv_ragdoll_maxcount_gib 65536                    // The maximum number of gibbed ragdolls that can exist on the map at once.
wait 1000;sm_cvar sv_ragdoll_maxcount_survivor 65536               // The maximum number of survivor ragdolls that can exist on the map at once.
wait 1000;sm_cvar sv__ragdoll_max_remove_per_frame 1               // The maximum number of ragdolls that can be removed each frame.
wait 1000;sm_cvar g_ragdoll_max_fps 60                             // Players with FPS lower than this will have a reduced number of ragdolls.
wait 1000;sm_cvar g_ragdoll_min_fps 30                             // Players with FPS lower than this will have 1 ragdoll of each type.
wait 1000;sm_cvar ragdoll_collide 0                                // Whether or not ragdolls will collide with each other.
wait 1000;sm_cvar ragdoll_self_collision 0                         // Whether or not ragdolls will collide with themselves.
wait 1000;sm_cvar ragdoll_slowdown 1                               // Whether ragdoll physics becomes slowed.
wait 1000;sm_cvar ragdoll_slowdown_time 2                          // Max amount of time that a ragdoll will be slowed down.
wait 1000;sm_cvar ragdoll_sleepaftertime 2                         // How long until a ragdoll will stop moving.
wait 1000;sm_cvar ragdoll_force_to_sleep_time 3                    // How long until a ragdoll can no longer be moved.
wait 1000;sm_cvar collision_shake_amp 0.0                          // Disables ragdoll collision physics.
wait 1000;sm_cvar collision_shake_freq 0.0                         // Disables ragdoll collision physics.
wait 1000;sm_cvar collision_shake_time 0.0                         // Disables ragdoll collision physics.
wait 1000;sm_cvar cl_simdbones 1                                   // Enables SIMD bones.
wait 1000;sm_cvar cl_use_simd_bones 1                              // Enables the use of SIMD bones.
wait 1000;sm_cvar phys_enable_experimental_optimizations 1         // Enables experimental SIMD optimizations.
wait 1000;sm_cvar phys_enable_simd_optimizations 1                 // Enables additional SIMD optimizations.
wait 1000;sm_cvar physx_valve_dll 1                                // Enables Valve DLL physics.
wait 1000;sm_cvar PhysPMC 1                                        // Enables PMC physics.
wait 1000;sm_cvar sv_gravity 750                                   // Sets the world gravity.
wait 1000;sm_cvar sv_accelerate 5.125                              // Sets the world acceleration.
wait 1000;sm_cvar sv_friction 4                                    // Sets the world friction.
wait 1000;sm_cvar sv_stopspeed 75                                  // Survivors will be forcefully slowed down below this speed.
wait 1000;sm_cvar sv_airaccelerate 15                              // Sets the air acceleration.
wait 1000;sm_cvar sv_wateraccelerate 20                            // Sets the water acceleration.
wait 1000;sm_cvar sv_waterfriction 0                               // Sets the water friction.
wait 1000;sm_cvar sv_waterdist 0                                   // Disables vertical view fixup when eyes are near a water plane.
wait 1000;sm_cvar z_forwardspeed 500                               // Limits the max speed moving forward.
wait 1000;sm_cvar z_sidespeed 500                                  // Limits the max speed moving sideways.
wait 1000;sm_cvar z_backspeed 500                                  // Limits the max speed moving backwards.
wait 1000;sm_cvar sv_backspeed 1.0                                 // The speed factor that is applied to players when moving backwards.
wait 1000;sm_cvar sv_rollspeed 450                                 // The speed at which strafing will tilt a players view by sv_rollangle.
wait 1000;sm_cvar sv_rollangle 0.0                                 // The angle relative to a players speed that their view till tilt when strafing.
wait 1000;sm_cvar sv_maxspeed 1000                                 // Limits how fast non-nocliping players can move themselves.
wait 1000;sm_cvar sv_maxvelocity 2000                              // Players are unable to travel faster than this velocity.
wait 1000;sm_cvar fall_speed_safe 550                              // A survivor who falls slower than this speed wont take fall damage.
wait 1000;sm_cvar fall_speed_fatal 750                             // A survivor who falls this speed to the ground will be killed.
wait 1000;sm_cvar sv_noclipaccelerate 5                            // Sets noclip acceleration.
wait 1000;sm_cvar sv_noclipfriction 4                              // Sets noclip friction.
wait 1000;sm_cvar sv_noclipspeed 3                                 // Sets noclip speed.
wait 1000;sm_cvar sv_noclipduringpause 1                           // Allows players to noclip even while the server is paused.
wait 1000;sm_cvar sv_specnoclip 1                                  // Whether or not spectators can noclip.
wait 1000;sm_cvar sv_specaccelerate 5                              // Sets spectate noclip acceleration.
wait 1000;sm_cvar sv_specspeed 3                                   // Sets spectate noclip speed.
wait 1000;sm_cvar noclip_fixup 1                                   // Fixes vertical movement view while nocliping. 
wait 1000;sm_cvar sv_footsteps 1                                   // Enables sound effects for footsteps.
wait 1000;sm_cvar sv_footstepinterval 0.166667                     // How often the footstep sound effect is played.                      
wait 1000;sm_cvar sv_optimizedmovement 1                           // Optimizes players walking movements.
wait 1000;sm_cvar mp_feetmaxyawrate 90                             // Player model feet yaw rate.
wait 1000;sm_cvar mp_feetyawrate 120                               // Player model feet yaw rate.
wait 1000;sm_cvar mp_feetyawrate_max 180                           // Player model feet yaw rate.
wait 1000;sm_cvar mp_facefronttime 0.333333                        // How long it takes for a players legs to turn after they turn their body.

wait 1500;sm_cvar z_friendly_fire_forgiveness 1                    // Survivors dont take damage from unintentional friendly fire.
wait 1500;sm_cvar survivor_friendly_fire_factor_expert 0.4         // Friendly fire factor on expert difficulty.
wait 1500;sm_cvar survivor_burn_factor_expert 0.8                  // Burn damage factor for survivors on expert difficulty.
wait 1500;sm_cvar l4d2_use_count 8                                 // How many guns can be picked up from the source.
wait 1500;sm_cvar player_use_radius 100                            // Range at which players can pick up items.
wait 1500;sm_cvar player_incap_use_radius 100                      // Range at which players can revive their teammates.
wait 1500;sm_cvar z_use_tolerance 0.8                              // The minumum angle at which a player must be facing something in order to use it.
wait 1500;sm_cvar z_gun_swing_coop_min_penalty 2147483647          // Enables unlimited shoves in Coop mode.
wait 1500;sm_cvar z_gun_swing_coop_max_penalty 2147483647          // Enables unlimited shoves in Coop mode.
wait 1500;sm_cvar z_gun_swing_vs_min_penalty 4                     // How many shoves before a survivor gets penalized.
wait 1500;sm_cvar z_gun_swing_vs_max_penalty 6                     // How many shoves before a survivor gets the maximum penalty.

wait 1500;sm_cvar z_gun_swing_duration 0.166667                    // The duration of a survivors shove attack.
wait 1500;sm_cvar z_gun_damage 0                                   // Prevents gas cans from combusting when you shove them in Survival mode before the round starts.
wait 1500;sm_cvar z_max_stagger_duration 2                         // The maximum amount of time that a survivor or infected can stagger for.
wait 1500;sm_cvar director_per_map_weapon_upgrade_chance 0.5       // The probability for the director to spawn a weapon upgrade on a map.
wait 1500;sm_cvar director_convert_pills 1                         // Allows the director to convert pills into kits or defibs.
wait 1500;sm_cvar director_vs_convert_pills 0.0                    // Disables pills from being converted into kits or defibs in versus mode.
wait 1500;sm_cvar director_convert_pills_critical_health 0         // The percent chance that pain pills will turn into a first aid kit.
wait 1500;sm_cvar director_convert_pills_to_defib_health 0         // The percent chance that pain pills will turn into a defib.
wait 1500;sm_cvar z_round_start_attack_prevention 0                // Removes the delay that survivors are not able to use their weapons for.
wait 1500;sm_cvar shotgun_reload_cancel_delay 0                    // How long it takes for a shotgun to stop firing and begin reloading.
wait 2500;sm_cvar z_non_head_damage_factor_easy 1.0                // Removes the damage nerf to common infected in easy difficulty.
wait 2500;sm_cvar z_non_head_damage_factor_normal 1.0              // Removes the damage nerf to common infected in normal difficulty.
wait 2500;sm_cvar z_non_head_damage_factor_hard 1.0                // Removes the damage nerf to common infected in advanced difficulty.
wait 2500;sm_cvar z_non_head_damage_factor_expert 1.0              // Removes the damage nerf to common infected in expert difficulty.
wait 2500;sm_cvar z_tank_damage_slow_max_range 1000                // The maximum range that a tank will be slowed down from gunfire.
wait 2500;sm_cvar z_tank_damage_slow_min_range 32                  // The minimum range that a tank will be slowed down from gunfire.
wait 1500;sm_cvar z_tank_autoshotgun_dmg_scale 1.0                 // Removes the damage nerf that gets put onto auto shotguns against tanks.
wait 1500;sm_cvar melee_range 75                                   // Sets the melee range to be equal to survivors shove range.
wait 1500;sm_cvar melee_combo_reset_time 1.0                       // How long after a melee weapon is used to reset the swing combo.
wait 1500;sm_cvar chainsaw_startup_fadeout_time 0                  // How long it takes for the chainsaws startup animation to fade out.
wait 2500;sm_cvar inferno_acid_spawn_angle 45                      // Causes spitter acid to spawn in a circular puddle when it detonates.
wait 2500;sm_cvar inferno_forward_reduction_factor 1.0             // The rate at which inferno flames spread from the source point.
wait 2500;sm_cvar inferno_initial_spawn_delay 0                    // How long inferno particles take to detonate.
wait 2500;sm_cvar inferno_max_range 250                            // Corrected max range of spread of inferno particles.
wait 1500;sm_cvar upgradepack_max_drop_dist 0                      // The max drop distance of an ammo pack when being deployed.
wait 1500;sm_cvar upgradepack_forward_dist 0                       // The forward distance of an ammo pack when being deployed.
wait 1500;sm_cvar z_use_belt_item_tolerance 0.0                    // The minimum angle for which you must be facing a teammate in order to heal them.
wait 1500;sm_cvar first_aid_kit_max_heal 101                       // Allows first aid kits to be used at 99 hp or less.
wait 1500;sm_cvar pain_pills_decay_rate 0.25                       // The rate in health per second that temporary health will decay at.
wait 1500;sm_cvar player_throwforce 2250                           // The force with which a player can throw an object.
wait 1500;sm_cvar z_minigun_spread 5                               // Spread of the mounted machine guns.
wait 1500;sm_cvar z_minigun_spin_up_speed 20                       // How fast the minigun barrel will spin when starting up.
wait 1500;sm_cvar z_minigun_firing_speed 20                        // How fast the minigun barrel will spin while being fired.
wait 1500;sm_cvar z_minigun_spin_down_speed 10                     // How fast the minigun barrel will spin when powering down.
wait 1500;sm_cvar z_minigun_rate_of_fire 3000                      // The miniguns rate of fire in bullets per minute.
wait 1500;sm_cvar z_minigun_damage_rate 60000                      // The miniguns damage rate in damage per minute.
wait 1500;sm_cvar z_minigun_fire_think_interval 0.0                // How often the minigun will update the direction it is firing in.
wait 1500;sm_cvar z_minigun_overheat_time 100                      // How long the minigun takes to overheat.
wait 1500;sm_cvar z_minigun_cooldown_time 0.1                      // How long it takes the minigun to cooldown.
wait 1500;sm_cvar z_minigun_fire_think_interval 0.1                // How often the minigun updates.
wait 1500;sm_cvar z_mounted_gun_fire_think_interval 0.016667       // How often the mounted machine gun will update the direction it is firing in.
wait 1500;sm_cvar mounted_gun_rate_of_fire 10                      // The mounted machine guns rate of fire in bullets per second.
wait 1500;sm_cvar mounted_gun_overheat_time 100                    // How long the mounted gun takes to overheat.
wait 1500;sm_cvar mounted_gun_overheat_penalty_time 0.1            // How long the mounted stays overheated for.
wait 1500;sm_cvar mounted_gun_cooldown_time 0.1                    // How long it takes the mounted gun to cooldown.
wait 1500;sm_cvar mounted_gun_mount_cooldown_time 0.1              // How long it takes the mounted guns mount to cooldown.
wait 1500;sm_cvar z_minigun_stand_distance 30                      // How far to put survivors when they stop using a mounted machine gun.
wait 1500;sm_cvar gascan_use_range 75                              // The range at which you can start pouring a gas can.
wait 1500;sm_cvar gascan_use_tolerance 0.0                         // The minimum angle for which you must be facing in order to pour a gas can.
wait 1500;sm_cvar gascan_throw_force 50                            // The amount of force that a thrown gascan will apply on physics objects.
wait 1500;sm_cvar cola_bottles_use_range 75                        // The range at which you can begin placing the cola bottles.
wait 1500;sm_cvar cola_bottles_use_tolerance 0.0                   // The minimum angle for which you must be facing in order to place the cola bottles.
wait 1500;sm_cvar tick_door_speed 1.0                              // Scale factor for how fast doors open and close.
wait 1500;sm_cvar z_door_reopen_interval 0.25                      // The amount of time before a closed door can be reopened.
wait 1500;sm_cvar z_door_retry_interval 0.5                        // The amount of time a door will try to close on an object.
wait 1500;sm_cvar z_breakable_damage 10                            // How much damage the infected deal to breakable objects.
wait 1500;sm_cvar z_door_pound_damage 100                          // How much damage the infected do when clawing a door.
wait 1500;sm_cvar z_pounce_door_damage 1000                        // How much damage a hunters pounce does to a door.
wait 1500;sm_cvar smoothstairs 1                                   // Smooths a players view when walking up stairs.
wait 1500;sm_cvar ladder_autocenter 0                              // Whether or not players should be auto-centered when climbing on ladders.
wait 1500;sm_cvar ladder_console_controls 0                        // Whether or not to use absolute controls when climbing a ladder.
wait 1500;sm_cvar ladder_horizon -0.25                             // The angle at which players can climb up ladders.
wait 1500;sm_cvar z_min_ladder_mount_dot 0.25                      // The minimum dot product required of a player to mount a ladder.
wait 1500;sm_cvar car_alarm_distance 800                           // How close a survivor must be to an alarm car for it to trigger.
wait 1500;sm_cvar car_alarm_chirp_distance 400                     // An alarm car will will play a chirp when survivors are this close to it. 
wait 1500;sm_cvar car_alarm_duration 10                            // How long after a car whose alarm is triggered will make noise.
wait 1500;sm_cvar hack_elevator_z_offset 12                        // How far above an elevators surface will survivors be placed.
wait 1500;sm_cvar elevator_movedelay 0                             // How long before an elevator starts moving once it has been activated.
wait 1500;sm_cvar func_break_max_pieces 30                         // Max number of pieces from a broken object.
wait 1500;sm_cvar props_break_max_pieces -1                        // The maximum number of pieces that can break from a prop.
wait 1500;sm_cvar props_break_max_pieces -1                        // The maximum number of pieces that can break from a prop per frame.
wait 1500;sm_cvar z_do_tracers 1                                   // Enables tracer particle rendering.
wait 1500;sm_cvar z_tracer_particles 1                             // Enables tracer particle rendering.
wait 1500;sm_cvar z_tracer_spacing 1                               // Minimum distance between tracer particles.
wait 1500;sm_cvar sv_tracereffects_limit_general 60                // Limits the max number of tracer particles that can be rendered.
wait 1500;sm_cvar r_decals 65536                                   // The max number of decals that can exist on the map at once.

// Slots (This prevents constant resetting of sv_maxplayers on map change)
wait 2000;sm_cvar mv_maxplayers 32                                 // Maximum number of players allowed on the server.
wait 2000;sm_cvar sv_maxplayers 32                                 // Maximum number of players allowed on the server.
wait 2000;sm_cvar sv_visiblemaxplayers 32                          // Maximum number of players that the server reports to the client.
wait 2000;sm_cvar sb_all_bot_game 1                                // Prevents the server from shutting down when there are no human players.
wait 2000;sm_cvar director_min_start_players 1                     // How many players are required to be in the server before it unfreezes.
wait 2000;sm_cvar director_afk_timeout 30                          // How long before a player who is not moving will be switched into idle mode.
wait 2000;sm_cvar allow_all_bot_survivor_team 1                    // Prevents the server from shutting down when there are no human players on a single team.
wait 2000;sm_cvar survivor_limit 4                                 // Limits the maximum number of players on the survivor team.
wait 2000;sm_cvar z_max_player_zombies 4                           // Limits the maximum number of players on the infected team.
wait 2000;sm_cvar z_minion_limit 4                                 // Limits the maximum number of infected bots allowed to spawn on the infected team.
wait 2000;sm_cvar z_minion_aim_tolerance 0.1                       // The minimum vision tolerance required for a special infected to attack a survivor.
wait 2000;sm_cvar director_allow_infected_bots 1                   // Enables infected bot spawning in versus mode.
wait 3000;sm_cvar survivor_speed 220                               // Corrects the actual survivor running speed.
wait 3000;sm_cvar z_shove_friend_speed 220                         // Prevents survivors from slowing down when a teammate shoves them.
wait 3000;sm_cvar survivor_allow_crawling 0                        // Whether survivors should be allowed to crawl while incapped.
wait 3000;sm_cvar survivor_crawl_speed 100                         // How fast survivors are when crawling.
wait 2000;sm_cvar sv_parallel_packentities 2                       // Set for dedicated servers.
wait 2000;sm_cvar sv_parallel_sendsnapshot 2                       // Set for dedicated servers.
wait 2000;sm_cvar sv_multiplayer_maxtempentities 48                // Limits the max number of temp entities that can be in the server.
wait 2000;sm_cvar sv_multiplayer_sounds 48                         // Limits the max number of sounds that can be played in the server.
wait 2000;sm_cvar sv_allowupload 1                                 // Allows clients to upload files.
wait 2000;sm_cvar sv_allowdownload 1                               // Allows clients to download files.
wait 2000;sm_cvar net_maxfilesize 64                               // Maximum allowed file upload size in MB.
wait 2000;sm_cvar sv_voiceenable 1                                 // Enables voice chat in the server.
wait 2000;sm_cvar sv_allow_votes 1                                 // Allows players to call votes on the server.
wait 2000;sm_cvar sv_vote_issue_change_mission_allowed 1           // Allows players to call a vote to change the map.
wait 2000;sm_cvar sv_vote_issue_change_map_now_allowed 1           // Allows players to call a vote to change the map now.
wait 2000;sm_cvar sv_vote_issue_change_map_later_allowed 1         // Allows players to call a vote to change the map later.
wait 2000;sm_cvar sv_vote_issue_restart_game_allowed 1             // Allows players to call a vote to restart the game or chapter.
wait 2000;sm_cvar sv_vote_issue_change_difficulty_allowed 1        // Allows players to call a vote to change the difficulty.
wait 2000;sm_cvar sv_vote_issue_kick_allowed 1                     // Allows players to call a vote to kick another player.
wait 2000;sm_cvar sv_vote_creation_timer 0                         // How often players are allowed to call a vote.              
wait 2000;sm_cvar sv_vote_failure_timer 0                          // Cooldown period for a vote that fails to pass.
wait 2000;sm_cvar sv_vote_timer_duration 12                        // How long players will have to vote on an issue.
wait 2000;sm_cvar sv_vote_command_delay 1.5                        // How long after a vote passes that the action will occur.
wait 2000;sm_cvar sv_vote_kick_ban_duration 0                      // Duration in minutes that a player will be banned for after being kicked.
wait 2000;sm_cvar sv_vote_plr_map_limit 2147483647                 // Allows players to call an infinite number of votes per map.
wait 2000;sm_cvar changelevel_pause_interval 7.5                   // How long after a chapter ends before loading into the next one.
wait 2000;sm_cvar decalfrequency 1.5                               // How often players can spray an image.
wait 2000;sm_cvar tauntfrequency 0                                 // How often players can use a taunt voice line.
wait 2000;sm_cvar intensity_factor 1.0                             // The rate at which certain events will increase a survivors intensity meter.
wait 2000;sm_cvar survivor_fog_vocalize_percent 0.5                // The percent of the fogs end distance that a survivor will vocalize their teammates.
wait 2000;sm_cvar z_expressions 1                                  // Enables infected facial expressions.
wait 2000;sm_cvar sv_pvsskipanimation 1                            // Skips bone setup outside of players visibility.
wait 2000;sm_cvar ai_expression_optimization 1                     // Skips infected facial expressions when outside of players visibility.
wait 2000;sm_cvar ai_expression_frametime 0.033333                 // Maximum frametime for background infected to use facial expressions.
wait 2000;sm_cvar npc_height_adjust 10                             // Difference in height between the players eye level and their models hitbox.
wait 2000;sm_cvar npc_vphysics 0                                   // Whether or not to enable Valve physics on NPCs.
wait 2000;sm_cvar skill 3                                          // Sets the games skill level.
wait 2000;sm_cvar sk_autoaim_mode 1                                // Enables skill auto aim mode.

wait 2500;sm_cvar Coop 1                                           // Enables Coop mode to be playable on the server.
wait 2500;sm_cvar Deathmatch 1                                     // Enables Deathmatch mode to be playable on the server.
wait 2500;sm_cvar sv_forcepreload 1                                // Pre-loading is always a good thing, force pre-loading on all clients.
wait 2500;sm_cvar precache_all_survivors 1                         // Forces pre-loading on all the survivors.
wait 2500;sm_cvar z_infected_flashlight 1                          // Enables the infected team flashlight.
wait 2500;sm_cvar z_infected_decals 1                              // Allows the infected team to use sprays.
wait 2500;sm_cvar mp_allowspectators 1                             // Allows spectators to be in the server.
wait 2500;sm_cvar spec_filter "any"                                // Spectators can spectate anyone on both teams.
wait 2500;sm_cvar spec_filter_survivors "any"                      // Spectators on the survivor team can spectate anyone on both teams.
wait 2500;sm_cvar spec_filter_infected "any"                       // Spectators on the infected team can spectate anyone on both teams.
wait 2500;sm_cvar director_spectate_specials 1                     // Allows spectators to spectate special infected bots.
wait 2500;sm_cvar z_spec_nightvision 1                             // Enables nightvision on spectators.
wait 2500;sm_cvar mp_teamoverride 1                                // Allows the team rosters to be overridden. 
wait 2500;sm_cvar mp_autoteambalance 0                             // Prevents some shuffling.
wait 2500;sm_cvar mp_teams_unbalance_limit 0                       // Disables check for team balancing.
wait 2500;sm_cvar mp_limitteams 0                                  // Disables check for team balancing.
wait 2500;sm_cvar mp_autokick 0                                    // Prevents players from being kicked by the game.
wait 2500;sm_cvar vs_max_team_switches 2147483647                  // Allows players to switch teams an unlimited number of times.
wait 2500;sm_cvar vs_score_pp_health 1.0                           // Point scale for permanent health. 
wait 2500;sm_cvar vs_score_pp_healthbuffer 1.0                     // Point scale for temp health.
wait 2500;sm_cvar vs_survivor_damage_reduction 1.0                 // Damage factor for infected on survivors in versus mode.
wait 2500;sm_cvar vs_survival_bonus 25                             // Point bonus for every survivor who survives in the saferoom.
wait 2500;sm_cvar vs_defib_penalty 25                              // Point penalty for bringing a dead survivor back to life.
wait 2500;sm_cvar vs_incap_bonus 25                                // Infected point bonus for incapping a survivor.
wait 2500;sm_cvar vs_tiebreak_bonus 25                             // Point bonus for winning the tie breaker at the end of a versus chapter.
wait 2500;sm_cvar versus_winning_team_goes_last 1                  // The winning team at the end of a chapter will play survivors first in the next chapter.
wait 2500;sm_cvar versus_tank_chance 1.0                           // Forces tanks to spawn in versus mode.
wait 2500;sm_cvar versus_tank_chance_intro 1.0                     // Forces tanks to spawn in intro maps in versus mode.
wait 2500;sm_cvar versus_tank_chance_finale 1.0                    // Forces tanks to spawn in finale maps in versus mode.
wait 2500;sm_cvar versus_tank_flow_team_variation 0.0              // Forces tanks to spawn in the same place for both teams.
wait 2500;sm_cvar versus_witch_chance 1.0                          // Forces witches to spawn in versus mode.
wait 2500;sm_cvar versus_witch_chance_intro 1.0                    // Forces witches to spawn in intro maps in versus mode.
wait 2500;sm_cvar versus_witch_chance_finale 1.0                   // Forces witches to spawn in finale maps in versus mode.
wait 2500;sm_cvar versus_witch_flow_team_variation 0.0             // Forces witches to spawn in the same place for both teams.

wait 2500;sm_cvar z_ghost_friction 1.625                           // Friction factor applied to ghost player zombies.
wait 2500;sm_cvar z_ghost_delay_max 20                             // Maximum amount of time for a dead player zombie to become a ghost again.
wait 2500;sm_cvar z_ghost_delay_minspawn 1                         // Delay before a player becomes a ghost.
wait 2500;sm_cvar z_fog_spawn 1                                    // Enables areas in fog to be spawnable.
wait 2500;sm_cvar claw_range_down 80                               // Downwards range of the special infecteds claw attack.
wait 2500;sm_cvar claw_swing_duration 0.166667                     // The duration of a special infecteds claw attack.
wait 2500;sm_cvar z_female_boomer_spawn_chance 50                  // The percent chance that a male boomer will spawn.
wait 2500;sm_cvar z_exploding_splat 0                              // Disables boomers from exploding after taking too much fall damage.
wait 2500;sm_cvar z_exploding_inner_radius 200                     // The inner radius of a killed boomers explosion.
wait 2500;sm_cvar z_spit_detonate_delay 0                          // How long spitter spit takes to detonates into a puddle.
wait 2500;sm_cvar tongue_allow_voluntary_release 0                 // Whether or not a player smoker can release a pulled survivor.
wait 2500;sm_cvar tongue_break_from_damage_amount 300              // How much damage a smoker must take for his tongue to break.
wait 2500;sm_cvar tongue_bullet_radius 8                           // The width of the smoker tongues hitbox.
wait 2500;sm_cvar z_pounce_damage_interrupt 300                    // How much damage a hunter must take for him to leap away.
wait 2500;sm_cvar z_pounce_damage_delay 0.75                       // Delay before a hunters pounce starts doing damage.
wait 2500;sm_cvar hunter_pounce_max_loft_angle 90                  // Max loft angle for a hunter lunge.
wait 2500;sm_cvar z_jockey_ride_damage_delay 0.5                   // Delay before a jockeys ride starts doing damage.
wait 2500;sm_cvar jockey_pounce_max_loft_angle 90                  // Max loft angle for a jockey leap.
wait 2500;sm_cvar z_charger_probe_alone 16                         // Object impact radius of a charger without a survivor.
wait 2500;sm_cvar z_charger_probe_attack 16                        // Object impact radius of a charger with a survivor.
wait 2500;sm_cvar z_charger_impact_epsilon 0                       // Object impact radius epsilon.
wait 2500;sm_cvar z_charge_impact_angle 0.6                        // Minimum angle for a charger to impact a wall.
wait 2500;sm_cvar z_frustration 1                                  // Enables the tank rage meter player tanks in Versus mode.
wait 2500;sm_cvar z_frustration_los_delay 0.5                      // Line of sight calculations will be delayed by this amount of time.
wait 2500;sm_cvar z_tank_speed 200                                 // Speed of a tank.
wait 2500;sm_cvar z_tank_speed_vs 220                              // Speed of a tank in Versus mode.
wait 2500;sm_cvar tank_throw_allow_range 400                       // A tank must be at least this far away from survivors to throw a rock.
wait 2500;sm_cvar tank_rock_overhead_percent 100                   // Makes sure that the tank only uses standard rock throw variations.
wait 2500;sm_cvar tank_throw_aim_error 0                           // Makes the tanks actually aim rocks at players in easy difficulty.
wait 2500;sm_cvar tank_throw_max_loft_angle 90                     // Max loft angle for a tank rock throw.
wait 2500;sm_cvar z_tank_rock_radius 96                            // Hitbox radius for the tanks rock to hit players.
wait 2500;sm_cvar tank_swing_range 50                              // The range of a tanks swing attack.
wait 2500;sm_cvar tank_swing_duration 0.166667                     // The duration of a tanks swing attack.

// Some Tweaking
wait 3000;sm_cvar sv_max_queries_sec_global 120                    // Maximum queries per second to respond to from anywhere.
wait 3000;sm_cvar sv_max_queries_sec 6                             // Maximum queries per second to respond to from a single IP address.
wait 3000;sm_cvar sv_max_queries_window 60                         // The window for averaging queries per second.
wait 3000;sm_cvar cl_resend 6                                      // How much time to wait before resending a connection attempt to the player.
wait 3000;sm_cvar sv_rcon_banpenalty 0                             // Disables the ban penalty on reconnecting players.
wait 3000;sm_cvar sv_rcon_minfailures 10                           // The minimum number of times a player can try reconnecting.
wait 3000;sm_cvar sv_rcon_maxfailures 20                           // The maximum number of times a player can try reconnecting.
wait 3000;sm_cvar sv_rcon_minfailuretime 30                        // How long to wait before a reconnection try will fail.
wait 3000;sm_cvar sv_reservation_timeout 60                        // How long before a lobby reservation expires.
wait 3000;sm_cvar sv_timeout 60                                    // How long before players who are not receiving connections from the host will be disconnected.
wait 3000;sm_cvar sv_pausable 0                                    // Prevents the server from being paused.
wait 3000;sm_cvar sv_pausable_dev 0                                // Prevents the server from being paused.
wait 3000;sm_cvar sv_pausable_dev_ds 0                             // Prevents the server from being paused.
wait 3000;sm_cvar sv_unlag 1                                       // Enables player lag compensation.
wait 3000;sm_cvar sv_unlag_fixstuck 1                              // Prevent getting stuck when attempting to "unlag" a player.
wait 3000;sm_cvar sv_maxunlag 1.0                                  // Maximum amount of seconds to "unlag", go back in time.
wait 3000;sm_cvar sv_lagcompensationforcerestore 1                 // Lag compensation is performed without checking for validity.
wait 3000;sm_cvar sv_player_stuck_tolerance 3.0                    // How long before stuck players will be teleported to their nearest teammate.
wait 3000;sm_cvar z_chance 100                                     // Infected spawn chance.
wait 3000;sm_cvar z_finale_chance 100                              // Infected finale spawn chance.
wait 3000;sm_cvar z_brawl_chance 10                                // Common Infected wont randomly fight eachother.
wait 3000;sm_cvar z_common_limit 40                                // Limits the maximum number of common infected allowed on the map.
wait 3000;sm_cvar z_background_limit 40                            // Limits the maximum number of common infected allowed in the background of the map.
wait 3000;sm_cvar director_always_allow_wanderers 1                // Always allow wandering common infected.
wait 3000;sm_cvar cleared_wanderer_respawn_chance 100              // Always respawns common infected in cleared nav areas.
wait 3000;sm_cvar scavenge_wanderer_respawn_chance 100             // Always respawns common infected in cleared nav areas in Scavenge mode.
wait 3000;sm_cvar z_mega_mob_size 60                               // The number of common infected to spawn when a panic event is triggered.
wait 3000;sm_cvar z_spawn_mobs_behind_chance 50                    // The percent chance that a mob will spawn behind the survivor team.
wait 3000;sm_cvar sv_infected_police_tonfa_probability 0.25        // The probability that a riot zombie will drop a police baton.
wait 3000;sm_cvar sv_infected_riot_control_tonfa_probability 0.25  // The probability that a police zombie will drop a police baton.
wait 3000;sm_cvar sv_infected_ceda_vomitjar_probability 0.125      // The probability that a CEDA zombie will drop a bile jar.
wait 3000;sm_cvar sv_fallen_survivor_health_multiplier 10.0        // Health multiplier of the fallen survivor zombie.
wait 3000;sm_cvar z_fallen_kill_suppress_time 60                   // Cooldown period after a fallen survivor zombie dies before which another one can be spawned.
wait 3000;sm_cvar z_fallen_max_count 1                             // Limits the maximum number of fallen survivor zombies allowed in the map.
wait 3000;sm_cvar z_attack_on_the_run_range 30                     // How close a common infected has to be to a survivor to attempt clawing them. 
wait 3000;sm_cvar z_attack_max_range 30                            // Max range of a common infected claw attack.
wait 3000;sm_cvar z_claw_hit_pitch_min -15                         // Max upwards screen offset applied to survivors who are hit by a common infected.
wait 3000;sm_cvar z_claw_hit_pitch_max 15                          // Max downwards screen offset applied to survivors who are hit by a common infected.
wait 3000;sm_cvar z_claw_hit_yaw_min -15                           // Max leftwards screen offset applied to survivors who are hit by a common infected.
wait 3000;sm_cvar z_claw_hit_yaw_max 15                            // Max rightwards screen offset applied to survivors who are hit by a common infected.
wait 3000;sm_cvar z_throttle_hit_interval_easy 0.333333            // How often a survivor can take damage from a common infected in easy difficulty.
wait 3000;sm_cvar z_throttle_hit_interval_normal 0.333333          // How often a survivor can take damage from a common infected in normal difficulty.
wait 3000;sm_cvar z_throttle_hit_interval_hard 0.333333            // How often a survivor can take damage from a common infected in advanced difficulty.
wait 3000;sm_cvar z_throttle_hit_interval_expert 0.666667          // How often a survivor can take damage from a common infected in expert difficulty.
wait 3000;sm_cvar survivor_damage_speed_factor 0.3                 // Speed factor that is applied to survivors when they take damage.
wait 3000;sm_cvar survivor_incapacitated_reload_multiplier 1.0     // Removes the reload penalty for incapacittated survivors.
wait 3000;sm_cvar survivor_ledge_grab_ground_check_time 1          // How long before a survivor who ledges over safe ground will be revived.
wait 3000;sm_cvar survivor_incap_hopeless_decay_rate 3             // The rate at which the survivors health will decay after all survivors become incapped.
wait 3000;sm_cvar cl_clock_correction 1                            // Enables clock correction on the clients.
wait 3000;sm_cvar cl_clock_correction_force_server_tick 999        // Forces clock correction to run at the servers tick rate.
wait 3000;sm_cvar cl_clock_correction_adjustment_min_offset 10     // The minimum clock offset at which clock corrections will be applied.
wait 3000;sm_cvar cl_clock_correction_adjustment_max_offset 100    // The maximum clock offset at which clock corrections will be applied.
wait 3000;sm_cvar cl_clock_correction_adjustment_max_amount 200    // The minimum number of milliseconds that can be used to correct a clients clock.
wait 3000;sm_cvar cl_clockdrift_max_ms 200                         // The maximum number of milliseconds that a clients clock can drift before it snaps back to the servers.
wait 3000;sm_cvar sv_clockcorrection_msecs 100                     // This one makes laggy players have less of an advantage regarding hitbox (as the server normally compensates for 60msec, lowering it below 15 will make some players appear stuttery)
wait 3000;sm_cvar sv_cycle_latch_timer 0.1                         // How often clock corrections are made on clients.
wait 3000;sm_cvar cl_consistencycheck_interval 2147483647          // How often the server performs a consistency check on the clients.
wait 3000;sm_cvar think_limit 0                                    // Disables script think time check.
wait 3000;sm_cvar sv_thinktimecheck 0                              // Disables script think time check.
wait 3000;sm_cvar tp_schedule_post_think 0                         // Disables script think time check.
